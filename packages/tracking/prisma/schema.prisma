datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

model User {
  userId            String   @id @map("id")
  name              String   @db.VarChar(256) @map("full_name")
  email             String   @unique @db.VarChar(256)
  profilePicture    String   @map("profile_picture")
  created DateTime  @default(now())
  updated DateTime  @updatedAt

  expenses          Expense[]       
  monthlyLimits     MonthlyLimit[]
  loan              Loan[]
  Invest            Invest[]

  @@index([email], name: "user_email_index")
}

model Expense {
  id          Bytes       @id   @db.Binary(16)
  amount      Float
  description String?     @db.VarChar(128)
  date        DateTime 
  created     DateTime    @default(now())
  updated     DateTime    @updatedAt
  userId      String
  user        User        @relation(fields: [userId], references: [userId])

  @@index([userId, date], name:"expense_user_id_date_index")
}

model MonthlyLimit{
  id          Bytes       @id   @db.Binary(16)
  month       Int
  year        Int
  limit       Float
  created     DateTime          @default(now())
  updated     DateTime          @updatedAt
  userId      String
  user        User              @relation(fields: [userId], references:[userId])

  @@index([userId], name: "monthly_limit_user_id_index")
  @@unique([userId,month,year], name: "user_month_year_unique")
}

enum LoanType {
  GIVEN
  TAKEN
}

model Loan{
  id        Bytes       @id     @db.Binary(16)
  loanType  LoanType
  name      String              @db.VarChar(128)
  amount    Float
  deadLine  DateTime?
  note      String?             @db.VarChar(512)
  userId    String
  user      User                @relation(fields: [userId], references:[userId])  
  created   DateTime            @default(now())
  updated   DateTime            @updatedAt

  @@index([userId], name: "loan_user_id_index")
}


enum EInvestStatus {
  ACTIVE
  COMPLETED
}


model Invest {
  id        Bytes          @id    @db.Binary(16)
  name      String                @db.VarChar(128)
  note      String                @db.VarChar(512)
  status    EInvestStatus         @default(ACTIVE)
  amount    Float
  startDate DateTime 
  endDate   DateTime?
  userId    String
  user      User                  @relation(fields : [userId], references:[userId])
  created   DateTime              @default(now())
  updated   DateTime              @updatedAt


   @@index([status, userId], name: "invest_status_userId_index")
}